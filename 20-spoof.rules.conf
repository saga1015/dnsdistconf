-- Spoof domains
spoof=newSuffixMatchNode();

-- Internalize
spoof:add(newDNSName("home.chrisbuijs.com"))
spoof:add(newDNSName("cj0.xs4all.space"))

-- DoH Crap
spoof:add(newDNSName("8888.google"))
spoof:add(newDNSName("cloudflare-dns.com"))
spoof:add(newDNSName("commons.host"))
spoof:add(newDNSName("dns10.quad9.net"))
spoof:add(newDNSName("dn.quad9.net"))
spoof:add(newDNSName("dns.aaflalo.me"))
spoof:add(newDNSName("dns.adguard.com"))
spoof:add(newDNSName("dns.cmrg.net"))
spoof:add(newDNSName("dns.digitale-gesellschaft.ch"))
spoof:add(newDNSName("dns.dns-over-https.com"))
spoof:add(newDNSName("dns.dnsoverhttps.net"))
spoof:add(newDNSName("dns-family.adguard.com"))
spoof:add(newDNSName("dns-gcp.aaflalo.me"))
spoof:add(newDNSName("dns.google"))
spoof:add(newDNSName("dns.google.com"))
spoof:add(newDNSName("dns.neutopia.org"))
spoof:add(newDNSName("dns.nextdns.io"))
spoof:add(newDNSName("dns-nyc.aaflalo.me"))
spoof:add(newDNSName("dns.quad9.net"))
spoof:add(newDNSName("dns.rubyfish.cn"))
spoof:add(newDNSName("dnstls.neutopia.org"))
spoof:add(newDNSName("doh1.dnswarden.com"))
spoof:add(newDNSName("doh2.dnswarden.com"))
spoof:add(newDNSName("doh.appliedprivacy.net"))
spoof:add(newDNSName("doh.armadilodns.net"))
spoof:add(newDNSName("doh.blahdns.com"))
spoof:add(newDNSName("doh.captnemo.in"))
spoof:add(newDNSName("doh-ch.blahdns.com"))
spoof:add(newDNSName("doh.cleanbrowsing.org"))
spoof:add(newDNSName("doh.crypto.sx"))
spoof:add(newDNSName("doh-de.blahdns.com"))
spoof:add(newDNSName("doh.dns.sb"))
spoof:add(newDNSName("doh.dns.sb.cdn.cloudflare.net"))
spoof:add(newDNSName("doh.dnswarden.com"))
spoof:add(newDNSName("doh-jp.blahdns.com"))
spoof:add(newDNSName("doh.li"))
spoof:add(newDNSName("doh.netweaver.uk"))
spoof:add(newDNSName("doh.powerdns.org"))
spoof:add(newDNSName("doh.securedns.eu"))
spoof:add(newDNSName("doh.tiar.app"))
spoof:add(newDNSName("google-public-dns-a.google.com"))
spoof:add(newDNSName("google-public-dns-b.google.com"))
spoof:add(newDNSName("jp.tiar.app"))
spoof:add(newDNSName("odvr.nic.cz"))
spoof:add(newDNSName("one.one.one.one"))
spoof:add(newDNSName("rpz-public-resolver1.rrdns.pch.net"))
spoof:add(newDNSName("rpz-public-resolver2.rrdns.pch.net"))
spoof:add(newDNSName("static.captnemo.in"))

-- Time Servers
-- spoof:add(newDNSName("pool.ntp.org"))
-- spoof:add(newDNSName("time.android.com"))
-- spoof:add(newDNSName("time.apple.com"))
-- spoof:add(newDNSName("time.asia.apple.com"))
-- spoof:add(newDNSName("time.euro.apple.com"))
-- spoof:add(newDNSName("time-ios.apple.com"))
-- spoof:add(newDNSName("time.google.com"))
-- spoof:add(newDNSName("time.windows.com"))

-- NetMaskGroup
localip=newNMG();
localip:addMask("10.0.0.0/8")
localip:addMask("127.0.0.1/32")
localip:addMask("172.16.0.0/12")
localip:addMask("192.168.0.0/16")
localip:addMask("::1/128")
localip:addMask("2001:981:1759:1::/64")
localip:addMask("fc00::/7")
localip:addMask("fe80::/10")

-- Spoof when local
-- addAction(AndRule({OrRule({QTypeRule(DNSQType.A), QTypeRule(DNSQType.AAAA)}), NetmaskGroupRule(localip, true, false), SuffixMatchNodeRule(spoof, false)}), SpoofAction({"192.168.1.32", "2001:981:1759:1::32"}))
addAction(AndRule({OrRule({QTypeRule(DNSQType.A), QTypeRule(DNSQType.AAAA)}), NetmaskGroupRule(localip, true, false), SuffixMatchNodeRule(spoof, false)}), LuaAction(local_dom))

